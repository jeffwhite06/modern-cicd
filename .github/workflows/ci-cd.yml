name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - helm/**
      - php/**
      - argo/**
      - .github/workflows/ci-cd.yml
      - Dockerfile
      - 000-default.conf

permissions:
  contents: write

jobs:
  build-container:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: docker buildx build --platform linux/amd64 -t ${{ vars.DOCKER_USERNAME }}/sample-php-app:${{ github.sha }} -t ${{ vars.DOCKER_USERNAME }}/sample-php-app:latest --push .

  update-helm-chart:
    runs-on: ubuntu-latest
    needs: build-container

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Update Helm chart with the new Docker image tag
      - name: Update Helm chart
        run: |
          IMAGE_NAME="sample-php-app"
          GITHUB_SHA=${{ github.sha }}
          sed -i "s|tag:.*|tag: $GITHUB_SHA|g" ./helm/values.yaml

      # Step 3: Commit and push updated Helm chart
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin main
          git add ./helm/values.yaml
          git commit -m "Update Helm chart with Docker image $GITHUB_SHA" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trigger-argocd-sync:
    runs-on: ubuntu-latest
    needs: update-helm-chart

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Update kube config
        run: aws eks update-kubeconfig --name argo --region us-west-2

      - name: Install App
        run: kubectl apply -f argo/php.yaml

      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Get ArgoCD Server
        id: server
        run: |
          echo argocd-server=$(kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].hostname}') >> $GITHUB_OUTPUT
          echo argocd-password=$(kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d) >> $GITHUB_OUTPUT

      - name: Sync application with ArgoCD
        run: |
          argocd login ${{ steps.server.outputs.argocd-server }} --username admin --password ${{ steps.server.outputs.argocd-password }} --insecure --plaintext
          argocd app sync sample-php-app
