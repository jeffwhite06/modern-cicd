name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - helm
      - src
      - argo
      - .github/workflows/ci-cd.yml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: docker buildx build --platform linux/amd64 -t ${{ vars.DOCKER_USERNAME }}/sample-php-app:latest --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Update kube config
      run: aws eks update-kubeconfig --name argo --region us-west-2

    - name: debug
      run: |
        kubectl get current-context
        kubectl get nodes

    - name: Deploy Helm chart
      run: |
        helm upgrade --install sample-php-app ./helm

  argocd-sync:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
    - name: Install ArgoCD CLI
      run: |
        curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
        chmod +x /usr/local/bin/argocd

    - name: Sync application with ArgoCD
      run: |
        argocd login $ARGOCD_SERVER --username $ARGOCD_USERNAME --password $ARGOCD_PASSWORD --insecure
        argocd app sync sample-php-app